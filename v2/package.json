{
  "name": "v2",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build:main": "ng build main",
    "build:options": "ng build options",
    "build:extension": "npm run build:main && npm run build:options && npm run copy:files",
    "copy:files": "npm run copy:manifest && npm run copy:background && npm run copy:assets && npm run copy:main && npm run copy:options && npm run cleanup:intermediate",
    "copy:manifest": "node -e \"require('fs').copyFileSync('manifest.json', 'dist/manifest.json')\"",
    "copy:background": "node -e \"require('fs').copyFileSync('background.js', 'dist/background.js')\"",
    "copy:assets": "node -e \"const fs=require('fs'),path=require('path'); function copyDir(src,dest){if(!fs.existsSync(dest))fs.mkdirSync(dest,{recursive:true}); fs.readdirSync(src,{withFileTypes:true}).forEach(entry=>{const srcPath=path.join(src,entry.name),destPath=path.join(dest,entry.name); entry.isDirectory()?copyDir(srcPath,destPath):fs.copyFileSync(srcPath,destPath)})} copyDir('projects/main/src/assets','dist/assets')\"",
    "copy:main": "node -e \"const fs=require('fs'),path=require('path'); const srcDir='dist/main/browser'; if(fs.existsSync(srcDir)){fs.readdirSync(srcDir).forEach(file=>{const srcPath=path.join(srcDir,file); const destPath=path.join('dist',file==='index.html'?'index.html':file); if(fs.lstatSync(srcPath).isFile()){fs.copyFileSync(srcPath,destPath)};})}\"",
    "copy:options": "node -e \"const fs=require('fs'),path=require('path'); const srcDir='dist/options/browser'; if(fs.existsSync(srcDir)){fs.readdirSync(srcDir).forEach(file=>{const srcPath=path.join(srcDir,file); const destPath=path.join('dist',file==='index.html'?'options.html':file); if(fs.lstatSync(srcPath).isFile()){fs.copyFileSync(srcPath,destPath)};})}\"",
    "cleanup:intermediate": "node -e \"const fs=require('fs'); ['dist/main','dist/options'].forEach(dir=>{if(fs.existsSync(dir)) fs.rmSync(dir,{recursive:true,force:true})})\"",
    "build": "npm run build:extension",
    "build:prod": "npm run clean && npm run build:extension",
    "watch": "ng build --watch --configuration development",
    "test": "ng test",
    "clean": "node -e \"const fs=require('fs'); if(fs.existsSync('dist')) fs.rmSync('dist',{recursive:true,force:true})\"",
    "dev:main": "ng serve main",
    "dev:options": "ng serve options",
    "version:patch": "node ../scripts/bump-version.js patch",
    "version:minor": "node ../scripts/bump-version-manual.js minor",
    "version:major": "node ../scripts/bump-version-manual.js major",
    "version": "node -p \"require('./manifest.json').version\""
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^19.0.0",
    "@angular/common": "^19.0.0",
    "@angular/compiler": "^19.0.0",
    "@angular/core": "^19.0.0",
    "@angular/forms": "^19.0.0",
    "@angular/platform-browser": "^19.0.0",
    "@angular/platform-browser-dynamic": "^19.0.0",
    "@angular/router": "^19.0.0",
    "rxjs": "~7.8.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.15.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^19.2.15",
    "@angular/cli": "^19.0.0",
    "@angular/compiler-cli": "^19.0.0",
    "@types/chrome": "^0.1.1",
    "@types/jasmine": "~5.1.0",
    "jasmine-core": "~5.4.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "typescript": "~5.6.2"
  }
}
